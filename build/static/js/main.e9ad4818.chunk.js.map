{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Filter","value","evt","onChange","PersonForm","submitEvt","name","nameChange","number","numberChange","onSubmit","type","Person","p","deleteHandler","onClick","baseUrl","axios","get","then","resp","data","person","post","id","delete","put","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","setMessage","useEffect","personServer","filterPersons","toLowerCase","indexOf","val","target","event","preventDefault","trimName","trim","trimNumber","personObj","filterP","length","concat","setTimeout","window","confirm","map","catch","error","alert","i","key","delPerson","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9ad4818.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ value, evt }) => (\r\n    <p>\r\n        filter shown with <input value={value} onChange={evt} />\r\n    </p>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ submitEvt, name, nameChange,\r\n    number, numberChange }) => (\r\n        <form onSubmit={submitEvt}>\r\n            <div>\r\n                name: <input value={name} onChange={nameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={number} onChange={numberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\nconst Person = ({ p, deleteHandler }) => (\r\n    <li>\r\n        {p.name} {p.number}\r\n        <button onClick={deleteHandler}>delete</button>\r\n    </li>\r\n\r\n)\r\n\r\nexport { PersonForm, Person }","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(resp => resp.data)\r\n}\r\n\r\nconst create = (person) => {\r\n    return axios.post(baseUrl, person).then(resp => resp.data)\r\n}\r\n\r\nconst del = id => {\r\n    return axios.delete(`${baseUrl}/${id}`).then(resp=>resp.data)\r\n}\r\n\r\nconst update = (id, person) => {\r\n    return axios.put(`${baseUrl}/${id}`, person).then(resp=>resp.data)\r\n}\r\n\r\nexport default { getAll, create, del, update }","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport { PersonForm, Person } from './components/PersonForm'\r\nimport personServer from './services/persons'\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={message[0]}>\r\n            {message[1]}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filter, setFilter] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        personServer\r\n            .getAll()\r\n            .then(data => setPersons(data))\r\n    }, [])\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const trimName = newName.trim();\r\n        const trimNumber = newNumber.trim();\r\n        if (trimName === '' || trimNumber === '') {\r\n            alert('name or number input is empty')\r\n            return\r\n        }\r\n        const personObj = {\r\n            name: trimName,\r\n            number: trimNumber\r\n        }\r\n        const filterP = persons.filter(p => p.name === trimName)\r\n        if (filterP.length !== 0) {\r\n            const result = window.confirm(`${filterP[0].name} is already added to phonebook, replace the old number with a new one?`)\r\n            if (result) {\r\n                personServer\r\n                    .update(filterP[0].id, personObj)\r\n                    .then(data => {\r\n                        setPersons(persons.map(p => p.name === trimName ? data : p))\r\n                        setNewName('')\r\n                        setNewNumber('')\r\n                        setMessage(['message',`Updated ${data.name}`])\r\n                        setTimeout(() => setMessage(null), 3000)\r\n                    })\r\n                    .catch(error => {\r\n                        setPersons(persons.filter(p=>p.name !== trimName))\r\n                        setMessage([\"error\",`Information of ${trimName} has already been removed from server`])\r\n                        setTimeout(() => setMessage(null), 3000)\r\n                    })\r\n            }\r\n            return\r\n        }\r\n        personServer\r\n            .create(personObj)\r\n            .then(data => {\r\n                setPersons(persons.concat(data))\r\n                setNewName('')\r\n                setNewNumber('')\r\n                setMessage(['message',`Added ${data.name}`])\r\n                setTimeout(() => setMessage(null), 3000)\r\n            })\r\n    }\r\n\r\n    const deletePerson = id => {\r\n        const delPerson = persons.filter(p => p.id === id)[0]\r\n        const result = window.confirm(`Delete ${delPerson.name}?`)\r\n        if (!result) return;\r\n        personServer\r\n            .del(id)\r\n            .then(data => {\r\n                setPersons(persons.filter(p => p.id !== id))\r\n                setMessage(['message',`Deleted ${delPerson.name}`])\r\n                setTimeout(() => setMessage(''), 2000)\r\n            })\r\n    }\r\n\r\n    const handleNameChange = (evt) => {\r\n        setNewName(evt.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (evt) => {\r\n        setNewNumber(evt.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (evt) => {\r\n        setFilter(evt.target.value)\r\n    }\r\n\r\n    const filterPersons = filter === '' ? persons :\r\n        persons.filter(\r\n            p => p.name.toLowerCase().indexOf(filter) !== -1)\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={message} />\r\n            <Filter val={filter} evt={handleFilterChange} />\r\n            <h2>Add a new</h2>\r\n            <PersonForm submitEvt={addPerson} name={newName}\r\n                nameChange={handleNameChange} number={newNumber}\r\n                numberChange={handleNumberChange} />\r\n            <h2>Numbers</h2>\r\n            <ul>\r\n                {filterPersons.map((p, i) =>\r\n                    <Person p={p} key={i} deleteHandler={() => deletePerson(p.id)} />)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport React from 'react'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}